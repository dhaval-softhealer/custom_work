# Copyright (C) Softhealer Technologies.
# Part of Softhealer Technologies.


from odoo import models, fields, _, api

class shPurchaseOrder(models.Model):
    _inherit = 'purchase.order'

    sh_sale_order_id = fields.Many2one('sale.order', string="Sale order" ,)
    
    @api.model
    def default_get(self, default_fields):
        defaults = super().default_get(default_fields)
        defaults['sh_sale_order_id'] = self.env.context.get('sh_sale_order_id')
        return defaults
    
    def action_view_mrp_bom(self):
        for each_sale_order in self.sh_sale_order_id:
            for orderline in each_sale_order.order_line:
                result = {
                    "type": "ir.actions.act_window",
                    "res_model": "mrp.bom",
                    "domain": [['id', 'in', orderline.product_id.bom_ids.ids]],
                    "name": _("Bills of Materials"),
                    'view_mode': 'tree,form',
                }
           
        return result
        
    def action_view_attachments(self):
          return {
            'name': _('Attachments'),
            'type': 'ir.actions.act_window',
            'res_model': 'ir.attachment',
            'view_mode': 'tree',
            'views': [(self.env.ref('sh_sale_customization.sh_view_attachment_tree').id, 'tree')],
            'domain' : [('res_id','=',self.id)],
        }

    def action_view_so(self):
        return {
            'name': _('Sale Orders'),
            'type': 'ir.actions.act_window',
            'res_model': 'sale.order',
            'view_mode': 'tree,form',
            'domain' : [('sh_purchase_order_id','=',self.id)],
        }

    def action_view_mrp_order(self):
        return {
            'res_model': 'mrp.production',
            'type': 'ir.actions.act_window',
            'name': _("Manufacturing Orders Generated by %s", self.name),
            'domain': [('id', 'in', self.sh_sale_order_id.mrp_production_ids.ids)],
            'view_mode': 'tree,form',
        }
    
    @api.model
    def create(self, values):
        result = super(shPurchaseOrder, self).create(values)
        if result.sh_sale_order_id:
            result.sh_sale_order_id.sh_purchase_order_id = result.id
        return result
    